# pages/4_Tuong_tac_Ho_tro.py
import streamlit as st
import time

st.title("T∆∞∆°ng t√°c v√† H·ªó tr·ª£ üí¨")
st.write("K·∫øt n·ªëi v·ªõi ch√∫ng t√¥i qua chatbot ho·∫∑c g·ª≠i ph·∫£n h·ªìi tr·ª±c ti·∫øp.")

# -------------------------------------------------------------------
## B∆Ø·ªöC 1: T·∫†O H√ÄM LOGIC CHO CHATBOT
# -------------------------------------------------------------------
# H√†m n√†y s·∫Ω ch·ª©a logic ƒë·ªÉ tr·∫£ l·ªùi c√°c c√¢u h·ªèi d·ª±a tr√™n t·ª´ kh√≥a.
# B·∫°n c√≥ th·ªÉ d·ªÖ d√†ng th√™m c√°c c√¢u tr·∫£ l·ªùi m·ªõi ·ªü ƒë√¢y.
def get_basic_response(user_input):
    """
    Ph√¢n t√≠ch input c·ªßa ng∆∞·ªùi d√πng v√† tr·∫£ v·ªÅ m·ªôt c√¢u tr·∫£ l·ªùi d·ª±a tr√™n t·ª´ kh√≥a.
    """
    normalized_input = user_input.lower() # Chuy·ªÉn th√†nh ch·ªØ th∆∞·ªùng ƒë·ªÉ d·ªÖ so s√°nh

    if "g·∫°ch" in normalized_input:
        return "Viglacera c√≥ nhi·ªÅu d√≤ng s·∫£n ph·∫©m g·∫°ch xanh, n·ªïi b·∫≠t l√† g·∫°ch b√™ t√¥ng kh√≠ ch∆∞ng √°p (AAC). S·∫£n ph·∫©m n√†y r·∫•t nh·∫π, c√°ch √¢m, c√°ch nhi·ªát t·ªët v√† th√¢n thi·ªán v·ªõi m√¥i tr∆∞·ªùng."

    elif "ch·ª©ng nh·∫≠n" in normalized_input or "ch·ª©ng ch·ªâ" in normalized_input:
        return "C√°c s·∫£n ph·∫©m xanh c·ªßa ch√∫ng t√¥i ƒë·∫°t nhi·ªÅu ch·ª©ng nh·∫≠n uy t√≠n nh∆∞ Ch·ª©ng nh·∫≠n TCVN, Nh√£n Xanh c·ªßa Singapore, v√† c√°c ki·ªÉm ƒë·ªãnh ph√≤ng ch√°y ch·ªØa ch√°y c·ªßa B·ªô C√¥ng An. B·∫°n c√≥ th·ªÉ xem chi ti·∫øt trong Th∆∞ vi·ªán S·∫£n ph·∫©m."

    elif "gi√°" in normalized_input or "b√°o gi√°" in normalized_input:
        return "C·∫£m ∆°n b·∫°n ƒë√£ quan t√¢m! V·ªÅ v·∫•n ƒë·ªÅ b√°o gi√° chi ti·∫øt, vui l√≤ng li√™n h·ªá tr·ª±c ti·∫øp v·ªõi b·ªô ph·∫≠n kinh doanh ho·∫∑c c√°c nh√† ph√¢n ph·ªëi ch√≠nh h√£ng c·ªßa ch√∫ng t√¥i. B·∫°n c√≥ th·ªÉ t√¨m nh√† ph√¢n ph·ªëi g·∫ßn nh·∫•t ·ªü trang 'Th√¥ng tin & K·∫øt n·ªëi'."

    elif "mua ·ªü ƒë√¢u" in normalized_input or "nh√† ph√¢n ph·ªëi" in normalized_input:
        return "B·∫°n c√≥ th·ªÉ t√¨m ki·∫øm c√°c ƒë·∫°i l√Ω v√† nh√† ph√¢n ph·ªëi c·ªßa Viglacera tr√™n to√†n qu·ªëc t·∫°i trang 'Th√¥ng tin & K·∫øt n·ªëi'. Trang ƒë√≥ c√≥ m·ªôt b·∫£n ƒë·ªì t∆∞∆°ng t√°c r·∫•t ti·ªán l·ª£i!"
        
    elif "li√™n h·ªá" in normalized_input:
        return "B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng form li√™n h·ªá ·ªü ngay b√™n d∆∞·ªõi ƒë·ªÉ g·ª≠i ph·∫£n h·ªìi tr·ª±c ti·∫øp cho ch√∫ng t√¥i. Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong th·ªùi gian s·ªõm nh·∫•t."

    else:
        # C√¢u tr·∫£ l·ªùi m·∫∑c ƒë·ªãnh n·∫øu kh√¥ng t√¨m th·∫•y t·ª´ kh√≥a
        return "C·∫£m ∆°n c√¢u h·ªèi c·ªßa b·∫°n! Hi·ªán t·∫°i t√¥i ch·ªâ c√≥ th·ªÉ tr·∫£ l·ªùi m·ªôt s·ªë c√¢u h·ªèi c∆° b·∫£n. Vui l√≤ng li√™n h·ªá b·ªô ph·∫≠n h·ªó tr·ª£ qua form b√™n d∆∞·ªõi n·∫øu b·∫°n c·∫ßn th√¥ng tin chi ti·∫øt h∆°n."

# --- H·ªá th·ªëng t∆∞ v·∫•n ·∫£o (AI Chatbot) ---
st.subheader("Chatbot t∆∞ v·∫•n Viglacera")

# Kh·ªüi t·∫°o l·ªãch s·ª≠ tin nh·∫Øn
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "assistant", "content": "Ch√†o b·∫°n! T√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n v·ªÅ c√°c s·∫£n ph·∫©m v·∫≠t li·ªáu x√¢y d·ª±ng xanh c·ªßa Viglacera?"}]

# Hi·ªÉn th·ªã c√°c tin nh·∫Øn c≈©
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# X·ª≠ l√Ω input m·ªõi
if prompt := st.chat_input("B·∫°n c√≥ c√¢u h·ªèi g√¨?"):
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    with st.chat_message("assistant"):
        with st.spinner("ƒêang nghƒ©..."):
            time.sleep(1)
            # -------------------------------------------------------------------
            ## B∆Ø·ªöC 2: G·ªåI H√ÄM LOGIC ·ªû ƒê√ÇY
            # -------------------------------------------------------------------
            response = get_basic_response(prompt)
        st.markdown(response)
    
    st.session_state.messages.append({"role": "assistant", "content": response})

st.markdown("---")

# --- Form li√™n h·ªá (Gi·ªØ nguy√™n kh√¥ng ƒë·ªïi) ---
st.subheader("Gi·ªõi thi·ªáu & Li√™n h·ªá")
st.write(
    """
    Viglacera t·ª± h√†o l√† m·ªôt trong nh·ªØng ƒë∆°n v·ªã h√†ng ƒë·∫ßu trong lƒ©nh v·ª±c s·∫£n xu·∫•t
    v·∫≠t li·ªáu x√¢y d·ª±ng t·∫°i Vi·ªát Nam...
    """
)
with st.form("contact_form", clear_on_submit=True):
    st.subheader("G·ª≠i ph·∫£n h·ªìi cho ch√∫ng t√¥i")
    name = st.text_input("T√™n c·ªßa b·∫°n:")
    email = st.text_input("Email c·ªßa b·∫°n:")
    message = st.text_area("N·ªôi dung tin nh·∫Øn:")
    submitted = st.form_submit_button("G·ª≠i ph·∫£n h·ªìi")
    if submitted:
        if name and email and message:
            st.success("C·∫£m ∆°n b·∫°n, ph·∫£n h·ªìi c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!")
        else:
            st.error("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß t·∫•t c·∫£ c√°c tr∆∞·ªùng.")